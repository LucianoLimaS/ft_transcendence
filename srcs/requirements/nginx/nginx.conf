worker_processes auto;  # Número de processos de trabalho

events {
    worker_connections 1024;  # Número máximo de conexões por processo de trabalho
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # Servidor HTTP para redirecionar para HTTPS
    server {
        listen 80;
        server_name localhost;

        # Redireciona todo o tráfego HTTP para HTTPS
        location / {
            return 301 https://$host$request_uri;
        }

        add_header X-Frame-Options "DENY";  # Proteção contra clickjacking
    }

    # Servidor HTTPS
    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/cert.pem;  
        ssl_certificate_key /etc/nginx/certs/key.pem;

        add_header X-Frame-Options "DENY";  # Proteção contra clickjacking

        # Segurança: força HTTPS em subdomínios e previne downgrade
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Endpoint de status do Nginx para o Prometheus Exporter
        location /stub_status {
            stub_status on;
            allow 127.0.0.1;  # Permite acesso apenas ao localhost
            allow 172.18.0.12/16;  # Permite acesso a uma sub-rede específica nginx-exporter
            # allow all;  # Negar acesso a todos os outros
            # deny all;  # Negar acesso a todos os outros
            #RETIRAR e colocar um endereço estático para o container nginx
        }

        # Rota para o Selenium
        location /wd/hub {
            proxy_pass http://selenium:4444/wd/hub;  
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Diretório para arquivos estáticos
        location /static/ {
            alias /static/;
            expires 30d;
            access_log off;
        }

        # Proxy para a aplicação Django
        location / {
            proxy_pass http://gunicorn:8005;  
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            # Configurações WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # # Proxy para o Kibana
        # location /kibana/ {
        #     proxy_pass http://kibana:5601/;  # Substitua 'kibana' pelo nome do serviço no Docker
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_redirect off;

        #     # Opcional: para WebSocket se Kibana usar
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        # }

        # Proxy para WebSockets (Daphne)
        location /ws/ {
            proxy_pass http://daphne:8001;
            access_log /var/log/nginx/ws_access.log;
            error_log /var/log/nginx/ws_error.log;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_redirect off;
            proxy_buffering off;
            proxy_read_timeout 3600s;  # Timeout para leitura
            proxy_send_timeout 3600s;  # Timeout para envio
        }
    }
}
