services:
  app:
    image: app
    container_name: app
    env_file:
      - ./.env
    build:
      context: ../ #raiz do projeto
      dockerfile: srcs/app/Dockerfile
    ports:
      - "8000:8000" # gunicorn (web)
    volumes:
      - ./app/transcendence:/ft_transcendence
      - /home/${USER}/data/staticfiles:/ft_transcendence/staticfiles
    networks:
      - transcendence
    depends_on:
      - postgres
    restart: always

  postgres:
    image: postgres
    container_name: postgres
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    volumes:
      - /home/${USER}/data/postgres:/var/lib/postgresql/data
    networks:
      - transcendence
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - ./.env
    ports:
      - "5050:80"
    volumes:
      - /home/${USER}/data/pgadmin:/var/lib/pgadmin
    networks:
      - transcendence
    depends_on:
      - app
    restart: always
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    env_file:
      - ./.env
    ports:
      - "3000:3000"
    volumes:
      - /home/${USER}/data/grafana:/var/lib/grafana
    networks:
      - transcendence
    depends_on:
      - app
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - /home/${USER}/data/prometheus:/prometheus
      - ./requirements/prometheus/:/etc/prometheus/
    networks:
      - transcendence
    depends_on:
      - app
    restart: always

  minio:
    image: minio/minio
    container_name: minio
    env_file:
      - ./.env
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - /home/${USER}/data/minio:/data
    networks:
      - transcendence
    depends_on:
      - app
    restart: always
  
  selenium:
    image: selenium/standalone-chrome
    container_name: selenium
    ports:
      - "4444:4444"
    volumes:
      - /home/${USER}/data/selenium:/var/log/selenium
    networks:
      - transcendence
    depends_on:
      - app
    restart: always
  
  selenium-exporter:
    image: selenium-exporter
    container_name: selenium-exporter
    build:
      context: ../ #raiz do projeto
      dockerfile: srcs/requirements/selenium/Dockerfile
    ports:
      - "8003:8003"
    networks:
      - transcendence
    depends_on:
      - app
    restart: always
  
  nginx:
    image: nginx:latest
    container_name: nginx
    build:
      context: ../ #raiz do projeto
      dockerfile: srcs/requirements/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./requirements/nginx/nginx.conf:/etc/nginx/nginx.conf  # Configuração personalizada do Nginx
      - ./requirements/certs:/etc/nginx/certs
      - /home/${USER}/data/staticfiles:/static  # Arquivos estáticos com volume persistente
      - /home/${USER}/data/nginx:/var/log/nginx # Logs do nginx
    networks:
      - transcendence
    depends_on:
      - app
    restart: always

  daphne:
    image: daphne:latest
    container_name: daphne
    build:
      context: ../ #raiz do projeto
      dockerfile: srcs/requirements/daphne/Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - static_vol:/static  # Arquivos estáticos com volume persistente
      - /home/${USER}/data/daphne:/ft_transcendence
    networks:
      - transcendence
    depends_on:
      - app
    restart: always
    
  nginx-exporter:
      image: nginx/nginx-prometheus-exporter:latest
      container_name: nginx-exporter
      ports:
        - "9113:9113"
      networks:
        - transcendence
      depends_on:
        - nginx
      restart: always

  postgres-exporter:
      image: wrouesnel/postgres_exporter:latest
      container_name: postgres-exporter
      env_file:
      - ./.env
      ports:
        - "9187:9187"
      networks:
        - transcendence
      depends_on:
        - postgres
      restart: always

networks:
    transcendence:
        name: transcendence
        driver: bridge